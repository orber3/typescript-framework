{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADgBA,IAAA,IAAA;ACbA,ADaA,ICbM,IAAI,GAAI,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAC,ADaxB,ECbwB,GAAG,EAAE,EAAN,GDavB;ACbkC,ADmBhC,ECnBgC,IAAI,EAAE,GDmBtC,IAAA,CAAoB,IAApB,EAAmC;ACnBd,ADmBD,CCnBR,CAAd,ODmBsB,IAAA,GAAA,IAAA;ACjBtB,ADaA,ICbI,CAAC,EAAL,CAAQ,CDaR,MAAA,CCbA,EAAmB,ADamB,EAAtC,UCbmB;AAAO,ADiBe,ECjBf,IAAI,CAAC,GAAL,CAAS;AAAC,IAAA,IAAI,EAAE;AAAP,ADmBjC,EAAA,CCnBwB,GDmBxB,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;ACnB+B,ADqBjD,CCrBJ,UDqBW,KAAK,IAAL,CAAU,QAAV,CAAP;ACpBJ,ADqBG,GAHD,CClBE,CAAC,EAAL,CAAQ,KAAR,EAAgB,YAAA,CAAQ,CAAxB;AAGA,IAAI,CAAC,OAAL,CAAa,KAAb;AACA,ADmBE,EAAA,IAAA,CCnBK,ADmBL,CCnBM,GAAR,CAAY,IAAZ,ADmBE,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;AClBvB,ADoBI,ICpBA,ADoBA,CCpBC,KDoBK,CAAC,CCpBX,CAAa,IDoBT,CAAc,GCpBlB,EDoBuB,IAAnB,EAA0B,MAA1B;AAED,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAuB,QAAvB,EAAyC;AACvC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AAED,GALD;;AAOF,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AAEvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AACA,QAAG,CAAC,QAAD,IAAY,QAAQ,CAAC,MAAT,KAAkB,CAAjC,EAAoC;AACtC;AACG;;AACD,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AAEvB,MAAA,QAAQ;AAET,KAJD;AAMD,GAZD;;AAgBA,SAAA,IAAA;AA1CA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["\r\n\r\ninterface UserProps { \r\n  name?: string;\r\n   age?: number\r\n\r\n\r\n}\r\n\r\n// type alias\r\n\r\ntype Callback = () => void\r\n\r\n\r\n\r\n\r\nexport class User { \r\n\r\nevents: {[key: string]: Callback[]} = {}\r\n\r\n\r\n\r\n  constructor(private data: UserProps) {}\r\n\r\n  get(propName: string): (string | number) { \r\n    \r\n    return this.data[propName]\r\n  }\r\n\r\n  set(update: UserProps): void { \r\n\r\n    Object.assign(this.data , update)\r\n\r\n  }\r\n\r\n  on(eventName: string , callback: Callback): void {\r\n    const handlers = this.events[eventName] || []\r\n    handlers.push(callback)\r\n    this.events[eventName] = handlers\r\n    \r\n  }\r\n\r\ntrigger(eventName: string): void { \r\n\r\n  const handlers = this.events[eventName]\r\n  if(!handlers|| handlers.length===0) { \r\nreturn\r\n  }\r\n  handlers.forEach(callback => { \r\n\r\n    callback()\r\n    \r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n}","import {User} from './models/User'\r\n\r\n\r\nconst user =  new User({age: 12 , name: 'or'})\r\n\r\nuser.on('change' , () => {user.set({name: 'goool'}) })\r\nuser.on('trr' , () => {} )\r\n\r\n\r\nuser.trigger('trr')\r\nconsole.log(user)\r\nuser.trigger('sdfsdf')"]}